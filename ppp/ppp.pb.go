// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: ppp/ppp.proto

package ppp

import (
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// More on https://developers.vtex.com/vtex-developer-docs/reference/payment-flow#manifest-1
type PaymentMethodName int32

const (
	PaymentMethodName_Visa            PaymentMethodName = 0
	PaymentMethodName_Mastercard      PaymentMethodName = 1
	PaymentMethodName_AmericanExpress PaymentMethodName = 2
	PaymentMethodName_Discover        PaymentMethodName = 3
	PaymentMethodName_JCB             PaymentMethodName = 4
	PaymentMethodName_Diners          PaymentMethodName = 5
	PaymentMethodName_Elo             PaymentMethodName = 6
	PaymentMethodName_Hipercard       PaymentMethodName = 7
	PaymentMethodName_Aura            PaymentMethodName = 8
	PaymentMethodName_Banricompras    PaymentMethodName = 9
	PaymentMethodName_Credz           PaymentMethodName = 10
	PaymentMethodName_VirtualDebitElo PaymentMethodName = 11
	PaymentMethodName_Cabal           PaymentMethodName = 12
	PaymentMethodName_VisaElectron    PaymentMethodName = 13
	PaymentMethodName_Maestro         PaymentMethodName = 14
	PaymentMethodName_MastercardDebit PaymentMethodName = 15
	PaymentMethodName_Cobranded       PaymentMethodName = 16
	PaymentMethodName_Privatelabels   PaymentMethodName = 17
	PaymentMethodName_Promissories    PaymentMethodName = 18
	PaymentMethodName_Cash            PaymentMethodName = 19
	PaymentMethodName_BankInvoice     PaymentMethodName = 20
	PaymentMethodName_Pix             PaymentMethodName = 21
	PaymentMethodName_SPEI            PaymentMethodName = 22
	PaymentMethodName_Safetypay       PaymentMethodName = 23
	PaymentMethodName_Bitcoin         PaymentMethodName = 24
)

// Enum value maps for PaymentMethodName.
var (
	PaymentMethodName_name = map[int32]string{
		0:  "Visa",
		1:  "Mastercard",
		2:  "AmericanExpress",
		3:  "Discover",
		4:  "JCB",
		5:  "Diners",
		6:  "Elo",
		7:  "Hipercard",
		8:  "Aura",
		9:  "Banricompras",
		10: "Credz",
		11: "VirtualDebitElo",
		12: "Cabal",
		13: "VisaElectron",
		14: "Maestro",
		15: "MastercardDebit",
		16: "Cobranded",
		17: "Privatelabels",
		18: "Promissories",
		19: "Cash",
		20: "BankInvoice",
		21: "Pix",
		22: "SPEI",
		23: "Safetypay",
		24: "Bitcoin",
	}
	PaymentMethodName_value = map[string]int32{
		"Visa":            0,
		"Mastercard":      1,
		"AmericanExpress": 2,
		"Discover":        3,
		"JCB":             4,
		"Diners":          5,
		"Elo":             6,
		"Hipercard":       7,
		"Aura":            8,
		"Banricompras":    9,
		"Credz":           10,
		"VirtualDebitElo": 11,
		"Cabal":           12,
		"VisaElectron":    13,
		"Maestro":         14,
		"MastercardDebit": 15,
		"Cobranded":       16,
		"Privatelabels":   17,
		"Promissories":    18,
		"Cash":            19,
		"BankInvoice":     20,
		"Pix":             21,
		"SPEI":            22,
		"Safetypay":       23,
		"Bitcoin":         24,
	}
)

func (x PaymentMethodName) Enum() *PaymentMethodName {
	p := new(PaymentMethodName)
	*p = x
	return p
}

func (x PaymentMethodName) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PaymentMethodName) Descriptor() protoreflect.EnumDescriptor {
	return file_ppp_ppp_proto_enumTypes[0].Descriptor()
}

func (PaymentMethodName) Type() protoreflect.EnumType {
	return &file_ppp_ppp_proto_enumTypes[0]
}

func (x PaymentMethodName) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PaymentMethodName.Descriptor instead.
func (PaymentMethodName) EnumDescriptor() ([]byte, []int) {
	return file_ppp_ppp_proto_rawDescGZIP(), []int{0}
}

type SplitStage int32

const (
	SplitStage_onAuthorize SplitStage = 0
	SplitStage_onCapture   SplitStage = 1
	SplitStage_disabled    SplitStage = 2
)

// Enum value maps for SplitStage.
var (
	SplitStage_name = map[int32]string{
		0: "onAuthorize",
		1: "onCapture",
		2: "disabled",
	}
	SplitStage_value = map[string]int32{
		"onAuthorize": 0,
		"onCapture":   1,
		"disabled":    2,
	}
)

func (x SplitStage) Enum() *SplitStage {
	p := new(SplitStage)
	*p = x
	return p
}

func (x SplitStage) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SplitStage) Descriptor() protoreflect.EnumDescriptor {
	return file_ppp_ppp_proto_enumTypes[1].Descriptor()
}

func (SplitStage) Type() protoreflect.EnumType {
	return &file_ppp_ppp_proto_enumTypes[1]
}

func (x SplitStage) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SplitStage.Descriptor instead.
func (SplitStage) EnumDescriptor() ([]byte, []int) {
	return file_ppp_ppp_proto_rawDescGZIP(), []int{1}
}

type CustomFieldType int32

const (
	CustomFieldType_select CustomFieldType = 0
	CustomFieldType_text   CustomFieldType = 1
)

// Enum value maps for CustomFieldType.
var (
	CustomFieldType_name = map[int32]string{
		0: "select",
		1: "text",
	}
	CustomFieldType_value = map[string]int32{
		"select": 0,
		"text":   1,
	}
)

func (x CustomFieldType) Enum() *CustomFieldType {
	p := new(CustomFieldType)
	*p = x
	return p
}

func (x CustomFieldType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CustomFieldType) Descriptor() protoreflect.EnumDescriptor {
	return file_ppp_ppp_proto_enumTypes[2].Descriptor()
}

func (CustomFieldType) Type() protoreflect.EnumType {
	return &file_ppp_ppp_proto_enumTypes[2]
}

func (x CustomFieldType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CustomFieldType.Descriptor instead.
func (CustomFieldType) EnumDescriptor() ([]byte, []int) {
	return file_ppp_ppp_proto_rawDescGZIP(), []int{2}
}

type PaymentMethod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        PaymentMethodName `protobuf:"varint,1,opt,name=name,proto3,enum=ppp.PaymentMethodName" json:"name,omitempty"`        // Payment method name
	AllowsSplit SplitStage        `protobuf:"varint,2,opt,name=allowsSplit,proto3,enum=ppp.SplitStage" json:"allowsSplit,omitempty"` // Describes which transaction flow stage the connector should receive payment split data . Accepted values: onAuthorize, onCapture, disabled
}

func (x *PaymentMethod) Reset() {
	*x = PaymentMethod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ppp_ppp_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentMethod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentMethod) ProtoMessage() {}

func (x *PaymentMethod) ProtoReflect() protoreflect.Message {
	mi := &file_ppp_ppp_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentMethod.ProtoReflect.Descriptor instead.
func (*PaymentMethod) Descriptor() ([]byte, []int) {
	return file_ppp_ppp_proto_rawDescGZIP(), []int{0}
}

func (x *PaymentMethod) GetName() PaymentMethodName {
	if x != nil {
		return x.Name
	}
	return PaymentMethodName_Visa
}

func (x *PaymentMethod) GetAllowsSplit() SplitStage {
	if x != nil {
		return x.AllowsSplit
	}
	return SplitStage_onAuthorize
}

// In case of select type, the possible params are text and value
type SelectFieldOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text  string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *SelectFieldOption) Reset() {
	*x = SelectFieldOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ppp_ppp_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectFieldOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectFieldOption) ProtoMessage() {}

func (x *SelectFieldOption) ProtoReflect() protoreflect.Message {
	mi := &file_ppp_ppp_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectFieldOption.ProtoReflect.Descriptor instead.
func (*SelectFieldOption) Descriptor() ([]byte, []int) {
	return file_ppp_ppp_proto_rawDescGZIP(), []int{1}
}

func (x *SelectFieldOption) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *SelectFieldOption) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type CustomField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string          `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                           // Custom field name
	Type CustomFieldType `protobuf:"varint,2,opt,name=type,proto3,enum=ppp.CustomFieldType" json:"type,omitempty"` // Custom field type. Accepted values: text, select
}

func (x *CustomField) Reset() {
	*x = CustomField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ppp_ppp_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomField) ProtoMessage() {}

func (x *CustomField) ProtoReflect() protoreflect.Message {
	mi := &file_ppp_ppp_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomField.ProtoReflect.Descriptor instead.
func (*CustomField) Descriptor() ([]byte, []int) {
	return file_ppp_ppp_proto_rawDescGZIP(), []int{2}
}

func (x *CustomField) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CustomField) GetType() CustomFieldType {
	if x != nil {
		return x.Type
	}
	return CustomFieldType_select
}

type Manifest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentMethods []*PaymentMethod     `protobuf:"bytes,1,rep,name=paymentMethods,proto3" json:"paymentMethods,omitempty"` // Describes each payment method supported by payment provider and exposed its respective metadata
	CustomFields   []*CustomField       `protobuf:"bytes,2,rep,name=customFields,proto3" json:"customFields,omitempty"`     // Describes the customized fields supported by the connector
	Options        []*SelectFieldOption `protobuf:"bytes,3,rep,name=options,proto3" json:"options,omitempty"`               // In case of select type, the possible params are text and value
}

func (x *Manifest) Reset() {
	*x = Manifest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ppp_ppp_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Manifest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Manifest) ProtoMessage() {}

func (x *Manifest) ProtoReflect() protoreflect.Message {
	mi := &file_ppp_ppp_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Manifest.ProtoReflect.Descriptor instead.
func (*Manifest) Descriptor() ([]byte, []int) {
	return file_ppp_ppp_proto_rawDescGZIP(), []int{3}
}

func (x *Manifest) GetPaymentMethods() []*PaymentMethod {
	if x != nil {
		return x.PaymentMethods
	}
	return nil
}

func (x *Manifest) GetCustomFields() []*CustomField {
	if x != nil {
		return x.CustomFields
	}
	return nil
}

func (x *Manifest) GetOptions() []*SelectFieldOption {
	if x != nil {
		return x.Options
	}
	return nil
}

var File_ppp_ppp_proto protoreflect.FileDescriptor

var file_ppp_ppp_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x70, 0x70, 0x70, 0x2f, 0x70, 0x70, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x03, 0x70, 0x70, 0x70, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x6e, 0x0a, 0x0d, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x12, 0x2a, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x16, 0x2e, 0x70, 0x70, 0x70, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x31,
	0x0a, 0x0b, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x73, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x70, 0x70, 0x70, 0x2e, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x53,
	0x74, 0x61, 0x67, 0x65, 0x52, 0x0b, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x73, 0x53, 0x70, 0x6c, 0x69,
	0x74, 0x22, 0x3d, 0x0a, 0x11, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x4b, 0x0a, 0x0b, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x14, 0x2e, 0x70, 0x70, 0x70, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xae, 0x01,
	0x0a, 0x08, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x0e, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x70, 0x70, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x12, 0x34, 0x0a, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70,
	0x70, 0x70, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x0c,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x30, 0x0a, 0x07,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x70, 0x70, 0x70, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2a, 0xf6,
	0x02, 0x0a, 0x11, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x56, 0x69, 0x73, 0x61, 0x10, 0x00, 0x12, 0x0e,
	0x0a, 0x0a, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x63, 0x61, 0x72, 0x64, 0x10, 0x01, 0x12, 0x13,
	0x0a, 0x0f, 0x41, 0x6d, 0x65, 0x72, 0x69, 0x63, 0x61, 0x6e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x10,
	0x03, 0x12, 0x07, 0x0a, 0x03, 0x4a, 0x43, 0x42, 0x10, 0x04, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x69,
	0x6e, 0x65, 0x72, 0x73, 0x10, 0x05, 0x12, 0x07, 0x0a, 0x03, 0x45, 0x6c, 0x6f, 0x10, 0x06, 0x12,
	0x0d, 0x0a, 0x09, 0x48, 0x69, 0x70, 0x65, 0x72, 0x63, 0x61, 0x72, 0x64, 0x10, 0x07, 0x12, 0x08,
	0x0a, 0x04, 0x41, 0x75, 0x72, 0x61, 0x10, 0x08, 0x12, 0x10, 0x0a, 0x0c, 0x42, 0x61, 0x6e, 0x72,
	0x69, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x61, 0x73, 0x10, 0x09, 0x12, 0x09, 0x0a, 0x05, 0x43, 0x72,
	0x65, 0x64, 0x7a, 0x10, 0x0a, 0x12, 0x13, 0x0a, 0x0f, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c,
	0x44, 0x65, 0x62, 0x69, 0x74, 0x45, 0x6c, 0x6f, 0x10, 0x0b, 0x12, 0x09, 0x0a, 0x05, 0x43, 0x61,
	0x62, 0x61, 0x6c, 0x10, 0x0c, 0x12, 0x10, 0x0a, 0x0c, 0x56, 0x69, 0x73, 0x61, 0x45, 0x6c, 0x65,
	0x63, 0x74, 0x72, 0x6f, 0x6e, 0x10, 0x0d, 0x12, 0x0b, 0x0a, 0x07, 0x4d, 0x61, 0x65, 0x73, 0x74,
	0x72, 0x6f, 0x10, 0x0e, 0x12, 0x13, 0x0a, 0x0f, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x63, 0x61,
	0x72, 0x64, 0x44, 0x65, 0x62, 0x69, 0x74, 0x10, 0x0f, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x6f, 0x62,
	0x72, 0x61, 0x6e, 0x64, 0x65, 0x64, 0x10, 0x10, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x72, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x10, 0x11, 0x12, 0x10, 0x0a, 0x0c, 0x50,
	0x72, 0x6f, 0x6d, 0x69, 0x73, 0x73, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x10, 0x12, 0x12, 0x08, 0x0a,
	0x04, 0x43, 0x61, 0x73, 0x68, 0x10, 0x13, 0x12, 0x0f, 0x0a, 0x0b, 0x42, 0x61, 0x6e, 0x6b, 0x49,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x10, 0x14, 0x12, 0x07, 0x0a, 0x03, 0x50, 0x69, 0x78, 0x10,
	0x15, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x50, 0x45, 0x49, 0x10, 0x16, 0x12, 0x0d, 0x0a, 0x09, 0x53,
	0x61, 0x66, 0x65, 0x74, 0x79, 0x70, 0x61, 0x79, 0x10, 0x17, 0x12, 0x0b, 0x0a, 0x07, 0x42, 0x69,
	0x74, 0x63, 0x6f, 0x69, 0x6e, 0x10, 0x18, 0x2a, 0x3a, 0x0a, 0x0a, 0x53, 0x70, 0x6c, 0x69, 0x74,
	0x53, 0x74, 0x61, 0x67, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x6f, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x65, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x6f, 0x6e, 0x43, 0x61, 0x70, 0x74,
	0x75, 0x72, 0x65, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x10, 0x02, 0x2a, 0x27, 0x0a, 0x0f, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x10, 0x01, 0x32, 0x49, 0x0a, 0x0f,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12,
	0x36, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x0d, 0x2e, 0x70, 0x70, 0x70, 0x2e, 0x4d, 0x61, 0x6e,
	0x69, 0x66, 0x65, 0x73, 0x74, 0x22, 0x00, 0x42, 0x13, 0x5a, 0x11, 0x6d, 0x63, 0x61, 0x6e, 0x64,
	0x65, 0x69, 0x61, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x70, 0x70, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ppp_ppp_proto_rawDescOnce sync.Once
	file_ppp_ppp_proto_rawDescData = file_ppp_ppp_proto_rawDesc
)

func file_ppp_ppp_proto_rawDescGZIP() []byte {
	file_ppp_ppp_proto_rawDescOnce.Do(func() {
		file_ppp_ppp_proto_rawDescData = protoimpl.X.CompressGZIP(file_ppp_ppp_proto_rawDescData)
	})
	return file_ppp_ppp_proto_rawDescData
}

var file_ppp_ppp_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_ppp_ppp_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_ppp_ppp_proto_goTypes = []interface{}{
	(PaymentMethodName)(0),    // 0: ppp.PaymentMethodName
	(SplitStage)(0),           // 1: ppp.SplitStage
	(CustomFieldType)(0),      // 2: ppp.CustomFieldType
	(*PaymentMethod)(nil),     // 3: ppp.PaymentMethod
	(*SelectFieldOption)(nil), // 4: ppp.SelectFieldOption
	(*CustomField)(nil),       // 5: ppp.CustomField
	(*Manifest)(nil),          // 6: ppp.Manifest
	(*empty.Empty)(nil),       // 7: google.protobuf.Empty
}
var file_ppp_ppp_proto_depIdxs = []int32{
	0, // 0: ppp.PaymentMethod.name:type_name -> ppp.PaymentMethodName
	1, // 1: ppp.PaymentMethod.allowsSplit:type_name -> ppp.SplitStage
	2, // 2: ppp.CustomField.type:type_name -> ppp.CustomFieldType
	3, // 3: ppp.Manifest.paymentMethods:type_name -> ppp.PaymentMethod
	5, // 4: ppp.Manifest.customFields:type_name -> ppp.CustomField
	4, // 5: ppp.Manifest.options:type_name -> ppp.SelectFieldOption
	7, // 6: ppp.PaymentProvider.GetManifest:input_type -> google.protobuf.Empty
	6, // 7: ppp.PaymentProvider.GetManifest:output_type -> ppp.Manifest
	7, // [7:8] is the sub-list for method output_type
	6, // [6:7] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_ppp_ppp_proto_init() }
func file_ppp_ppp_proto_init() {
	if File_ppp_ppp_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ppp_ppp_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentMethod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ppp_ppp_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelectFieldOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ppp_ppp_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ppp_ppp_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Manifest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ppp_ppp_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ppp_ppp_proto_goTypes,
		DependencyIndexes: file_ppp_ppp_proto_depIdxs,
		EnumInfos:         file_ppp_ppp_proto_enumTypes,
		MessageInfos:      file_ppp_ppp_proto_msgTypes,
	}.Build()
	File_ppp_ppp_proto = out.File
	file_ppp_ppp_proto_rawDesc = nil
	file_ppp_ppp_proto_goTypes = nil
	file_ppp_ppp_proto_depIdxs = nil
}
